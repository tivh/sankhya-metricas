<?php

namespace App\Models;

use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class Vendedor extends Model
{
    use HasFactory;
    protected $table = 'TGFVEN';


    public function getFaturamento($codVendedor)
    {
        $result = DB::select(DB::raw("SELECT DISTINCT
        CAB.NUNOTA NM_UNICO,
        CAB.CODEMP COD_EMP,
        CAB.NUMNOTA NM_NOTA,
        CAB.CODTIPOPER TOP,
        PAR.NOMEPARC CLIENTE,
        COALESCE(PARHOSP.NOMEPARC, ' ') HOSP_USO,
        TO_CHAR(CAB.DTNEG ,'DD/MM/YYYY') DT_EMISSAO,
        TO_CHAR(CAB.DTFATUR,'DD/MM/YYYY') DT_FATURAMENTO,
        CAB.CODVEND,
        VEN.APELIDO VENDEDOR,
        ITE.CONTROLE,
		PRO.DESCRPROD PRODUTO,
		GRU.DESCRGRUPOPROD GRUPO,
		GRUPAI.DESCRGRUPOPROD SEGMENTO,
        CAB.VLRNOTA VALORNOTA,
        ITE.VLRUNIT,
       CASE WHEN ITE.QTDNEG = 0 THEN 0
       ELSE (CASE WHEN CAB.TIPMOV IN('O','C','E')
       THEN ITE.VLRTOT - ITE.VLRDESC - ITE.VLRREPRED
       ELSE (CASE WHEN COALESCE((SELECT INTEIRO FROM TSIPAR WHERE CHAVE = 'TIPTABPRECO'),0) <> 9
       THEN ITE.VLRTOT - ITE.VLRDESC - ITE.VLRREPRED ELSE (ITE.VLRTOT - ITE.VLRDESC - ITE.VLRREPRED) + ITE.VLRSUBST +
       ((CASE WHEN ITE.VLRIPI > 0 AND COALESCE((SELECT SOMARIPI FROM TGFTOP TP WHERE TP.CODTIPOPER = CAB.CODTIPOPER AND TP.DHALTER = CAB.DHTIPOPER),'N') <> 'N'
       THEN ITE.VLRIPI ELSE 0 END)) END) END) / ITE.QTDNEG END VLRLIQ,
        ITE.VLRTOT
        FROM TGFITE ITE
                    INNER JOIN TGFCAB CAB ON CAB.NUNOTA = ITE.NUNOTA
                    INNER JOIN TGFFIN FIN ON FIN.NUNOTA = CAB.NUNOTA
                    INNER JOIN TGFVEN VEN  ON VEN.CODVEND = CAB.CODVEND
                    INNER JOIN TGFPAR PAR  ON PAR.CODPARC = CAB.CODPARC
					INNER JOIN TGFPRO PRO ON PRO.CODPROD = ITE.CODPROD
					INNER JOIN TGFGRU GRU ON GRU.CODGRUPOPROD = PRO.CODGRUPOPROD
					INNER JOIN TGFGRU GRUPAI ON GRU.CODGRUPAI  = GRUPAI.CODGRUPOPROD
					LEFT  JOIN TGFPAR PARHOSP ON PARHOSP.CODPARC = CAB.AD_CODHOSP
        WHERE
        CAB.CODTIPOPER IN (1100, 1125)
--        AND CAB.STATUSNFE = 'A'
        AND CAB.TIPMOV = 'V'
		AND CAB.STATUSNOTA = 'L'
        AND CAB.DTNEG  >= '01102022'
		AND CAB.DTNEG <= '31102022'
        and cab.CODVEND = $codVendedor
        UNION
        SELECT DISTINCT
        CAB.NUNOTA NM_UNICO,
        CAB.CODEMP COD_EMP,
        CAB.NUMNOTA NM_NOTA,
        CAB.CODTIPOPER TOP,
        PAR.NOMEPARC CLIENTE,
        COALESCE(PARHOSP.NOMEPARC, ' ') HOSP_USO,
        TO_CHAR(CAB.DTNEG ,'DD/MM/YYYY') DT_EMISSAO,
        TO_CHAR(CAB.DTFATUR,'DD/MM/YYYY') DT_FATURAMENTO,
        CAB.CODVEND,
        VEN.APELIDO VENDEDOR,
        ' ' ,
		' ' PRODUTO,
		' ' GRUPO,
		' ' SEGMENTO,
        CAB.VLRNOTA * -1 VALORNOTA,
        CAB.VLRNOTA * -1,
        CAB.VLRNOTA * -1 VLRLIQ,
        CAB.VLRNOTA * -1
        FROM TGFCAB CAB
                    INNER JOIN TGFFIN FIN ON FIN.NUNOTA = CAB.NUNOTA
                    INNER JOIN TGFVEN VEN  ON VEN.CODVEND = CAB.CODVEND
                    INNER JOIN TGFPAR PAR  ON PAR.CODPARC = CAB.CODPARC
					LEFT  JOIN TGFPAR PARHOSP ON PARHOSP.CODPARC = CAB.AD_CODHOSP
        WHERE
        CAB.CODTIPOPER IN (1217)
--        AND CAB.STATUSNFE = 'A'
--        AND CAB.TIPMOV = 'V'
--		AND CAB.STATUSNOTA = 'L'
        AND CAB.DTNEG  >= '01112022'
		AND CAB.DTNEG <= '30112022'
        and cab.CODVEND = $codVendedor
        ORDER BY DT_EMISSAO, VENDEDOR, CLIENTE
        "));

        return $result;
    }


    public function getVendedores()
    {
        $result = DB::select(DB::raw("SELECT DISTINCT
        VEN.CODVEND,
        VEN.APELIDO
        FROM TGFITE ITE2
                    INNER JOIN TGFEST EST2 ON ITE2.CONTROLE = EST2.CONTROLE
                    INNER JOIN TGFCAB CAB2 ON CAB2.NUNOTA = ITE2.NUNOTA
                    INNER JOIN TGFVEN VEN  ON VEN.CODVEND = CAB2.CODVEND
                    INNER JOIN TGFFIN FIN  ON FIN.NUNOTA = CAB2.NUNOTA AND FIN.CODEMP = CAB2.CODEMP
                    INNER JOIN TGFPAR PAR  ON PAR.CODPARC = CAB2.CODPARC
        WHERE
        CAB2.CODTIPOPER IN (1100, 1125)
        AND CAB2.STATUSNFE = 'A'
        "));

        return $result;
    }
}
